services:
  # NATS Server (Message Broker)
  hub-server:
    restart: always
    image: nats:alpine
    container_name: hub-server
    networks:
      - proxus
    ports:
      - "4222:4222"  # NATS client port
      - "8222:8222"  # NATS monitoring port
      - "7422:7422"  # NATS leaf node port
    volumes:
      - nats:/data
      - config:/nats-config
    command: |
      /bin/sh -c "
      mkdir -p /nats-config
      if [ ! -f /nats-config/hub.conf ]; then
        cat > /nats-config/hub.conf << EOF
      port: 4222
      server_name: hub-server
      jetstream {
        store_dir: \"/data/jetstream\"
        domain: hub
      }
      leafnodes {
        port: 7422
      }
      include ./accounts.conf
      EOF
      fi
      if [ ! -f /nats-config/accounts.conf ]; then
        cat > /nats-config/accounts.conf << EOF
      accounts: {
        USERS: {
          users: [
            {user: acc, password: acc}
          ],
          jetstream: enabled
        },
        SYS: {
          users: [
            {user: admin, password: admin}
          ]
        }
      }
      system_account: SYS
      EOF
      fi
      nats-server -c /nats-config/hub.conf -m 8222
      "

  # Database Service
  timescaledb:
    restart: always
    container_name: timescaledb
    image: timescale/timescaledb-ha:pg16
    command: postgres -c shared_preload_libraries=timescaledb -p 5442
    user: "0"
    shm_size: 1g
    volumes:
      - proxus-db-volume:/home/postgres/pgdata/data
    networks:
      - proxus
    ports:
      - "5442:5442"
    environment:
      - POSTGRES_DB=proxus
      - POSTGRES_USER=proxus
      - POSTGRES_PASSWORD=proxus

  # Proxus API Service
  proxus-api:
    restart: always
    container_name: proxus-api
    image: proxusplatform/proxus-api:latest
    user: "0"
    networks:
      - proxus
    ports:
      - "8082:8082"
    volumes:
      - config:/app/config
    environment:
      - TZ=Europe/Istanbul
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8081
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
    depends_on:
      - timescaledb

  # Proxus Server (connected to NATS)
  proxus-server:
    restart: always
    container_name: proxus-server
    image: proxusplatform/proxus-server:latest
    user: "0"
    networks:
      - proxus
    ports:
      - "8083:8083"
      - "1883:1883"  # MQTT port
    volumes:
      - config:/app/config
    environment:
      - TZ=Europe/Istanbul
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - AdvertisedHost=proxus-server
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8083
      - OTEL_DOTNET_AUTO_METRICS_ADDITIONAL_SOURCES=Proto.Actor
      - OTEL_EXPORTER_OTLP_PROTOCOL=grpc
      - OTEL_DOTNET_AUTO_METRICS_CONSOLE_EXPORTER_ENABLED=true
    command: >
      ./Proxus.Server
      GatewayID=1
      EdgeMode=Proxus
      BrokerUrl=nats://hub-server:4222
      BrokerUser=acc
      BrokerPassword=acc
      UI-Address=proxus-ui
    
    depends_on:
      - hub-server
      - proxus-ui
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8083/healthz | grep -q 'Healthy' || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

  # Proxus UI (connected to NATS)
  proxus-ui:
    restart: always
    container_name: proxus-ui
    image: proxusplatform/proxus-ui:latest
    user: "0"
    networks:
      - proxus
    ports:
      - "8080:8080"
    volumes:
      - proxus_modules:/app/Modules
      - config:/app/config
      - /var/run/docker.sock:/var/run/docker.sock
      - ./Configs/accounts.conf:/app/accounts.conf
    environment:
      - TZ=Europe/Istanbul
      - DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=false
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
    command: >
      ./Proxus.Blazor.Server
      BrokerUrl=nats://hub-server:4222
      BrokerUser=acc
      BrokerPassword=acc
    
    depends_on:
      - hub-server
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/healthz | grep -q 'Healthy' || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 5

networks:
  proxus:
    driver: bridge

volumes:
  proxus_modules:
  proxus-db-volume:
  config:
  nats:
